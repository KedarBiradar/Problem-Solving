#include <iostream>
#include <map>
#include <cstdio>

using namespace std;

long long int arr1[84]={0,1,2,3,4,5,6,7,8,9,10,20,30,40,50,60,70,80,90,100,200,300,400,500,600,700,800,900,1000,2000,3000,4000,5000,6000,7000,8000,9000,10000,20000,30000,40000,50000,60000,70000,80000,90000,100000,200000,300000,400000,500000,600000,700000,800000,900000,1000000,2000000,3000000,4000000,5000000,6000000,7000000,8000000,9000000,10000000,20000000,30000000,40000000,50000000,60000000,70000000,80000000,90000000,100000000,200000000,300000000,400000000,500000000,600000000,700000000,800000000,900000000,1000000000};
long long int arr2[84]={0,1,3,6,10,15,21,28,36,45,46,102,168,244,330,426,532,648,774,901,1902,3003,4204,5505,6906,8407,10008,11709,13501,28002,43503,60004,77505,96006,115507,136008,157509,180001,370002,570003,780004,1000005,1230006,1470007,1720008,1980009,2250001,4600002,7050003,9600004,12250005,15000006,17850007,20800008,23850009,27000001,55000002,84000003,114000004,145000005,177000006,210000007,244000008,279000009,315000001,640000002,975000003,1320000004,1675000005,2040000006,2415000007,2800000008,3195000009,3600000001,7300000002LL,11100000003LL,15000000004LL,19000000005LL,23100000006LL,27300000007LL,31600000008LL,36000000009LL,40500000001LL};

map < long long int,long long int > mp;

int dsum(long long int d)
{
			int sum=0;
			while(d>0)
			{
				sum+=d%10;
				d=d/10;
			}
	return sum;
}

long long int sum(long long int n)
{
	long long int div=10,prevRem=0,total=0,c=0,org,unit;
	while(((n*10)/div)>0)
	{
		unit=n%div;
		org=unit-prevRem;
		//cout<<org<<endl;
		prevRem=unit;
		c=(mp.find(org)->second)+(org*dsum(n/div));
		total+=c;
		div*=10;
	}
	return total;

}
int main()
{
	long long int a,b,asum,bsum,ii;
	for(ii=0;ii<83;ii++)
	{
		mp.insert(make_pair(arr1[ii],arr2[ii]));
	}

	while(1)
	{
		scanf("%lld%lld",&a,&b);
		if(a==-1 && b==-1)
			break;	
		asum=sum(a-1);
		bsum=sum(b);
		printf("%lld\n",bsum-asum);
	}
	return 0;
}
